% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/merge_datasets.R
\name{merge_datasets}
\alias{merge_datasets}
\title{Merge the datasets on the keys}
\usage{
merge_datasets(
  selector_list,
  datasets,
  merge_function = "dplyr::full_join",
  anl_name = "ANL"
)
}
\arguments{
\item{selector_list}{(\code{reactive})\cr
output from \code{\link[=data_extract_multiple_srv]{data_extract_multiple_srv()}} or a reactive named list of outputs from \code{\link[=data_extract_srv]{data_extract_srv()}}.
When using a reactive named list, the names must be identical to the shiny ids of the respective \code{\link[=data_extract_ui]{data_extract_ui()}}.}

\item{datasets}{(\code{FilteredData})\cr
object containing data (see \code{teal.slice::FilteredData}).}

\item{merge_function}{(\code{character(1)} or \code{reactive})\cr
A character string of a function that accepts the arguments
\code{x}, \code{y} and \code{by} to perform the merging of datasets.}

\item{anl_name}{(\code{character(1)})\cr
Name of the analysis dataset.}
}
\value{
merged_dataset (\code{list}) containing:
\itemize{
\item data (\code{data.frame}) after filtering and reshaping containing selected columns.
\item \code{expr} (\code{character}) code needed to replicate merged dataset.
\item columns_source (\code{list}) of column selected for particular selector.
\item keys (\code{list}) the keys of the merged dataset.
\item filter_info (\code{list}) The information given by the user. This information
defines the filters that are applied on the data. Additionally it defines
the variables that are selected from the data sets.
}
}
\description{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#stable}{\figure{lifecycle-stable.svg}{options: alt='[Stable]'}}}{\strong{[Stable]}}
It combines/merges multiple datasets with specified keys attribute.
}
\details{
Internally this function uses calls to allow reproducibility.
}
\examples{
\dontrun{
# inside teal module server function
response <- data_extract_srv(
  id = "reponse",
  data_extract_spec = response_spec,
  datasets = datasets
)
regressor <- data_extract_srv(
  id = "regressor",
  data_extract_spec = regressor_spec,
  datasets = datasets
)
merged_data <- merge_datasets(list(regressor(), response()))
}
}
